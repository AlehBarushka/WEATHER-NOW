{"version":3,"sources":["App.js","index.js"],"names":["App","props","handleSearchChange","e","setState","searchQuery","target","value","sendRequest","state","fetch","then","response","json","weather","isLoading","handleSearchSubmit","key","this","className","main","temp","type","placeholder","cod","onChange","onKeyDown","name","sys","country","DateTime","fromSeconds","dt","toLocaleString","DATE_HUGE","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAQqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CACZC,YAAaF,EAAEG,OAAOC,SAZP,EAgBnBC,YAAc,WAAO,IACXH,EAAgB,EAAKI,MAArBJ,YAERK,MAAM,GAAD,OAvBO,2CAuBP,qBAAwBL,EAAxB,kBAtBO,mCAsBP,kBACFM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAD,OACJ,EAAKR,SAAS,CACZU,QAASF,EACTG,WAAW,QAxBA,EA6BnBC,mBAAqB,SAACb,GACN,UAAVA,EAAEc,KAIN,EAAKb,SACH,CACEW,WAAW,GAEb,EAAKP,cAnCP,EAAKC,MAAQ,CACXJ,YAAa,GACbS,QAAS,KACTC,WAAW,GANI,E,qDA0CnB,c,oBAEA,WAAU,IAAD,EACqCG,KAAKT,MAAzCJ,EADD,EACCA,YAAaS,EADd,EACcA,QAASC,EADvB,EACuBA,UAE9B,OACE,sBACEI,UACEL,GAAWA,EAAQM,MAAQN,EAAQM,KAAKC,KAAO,EAC3C,iBACA,YAJR,UAOE,uBACEC,KAAK,OACLC,YAAY,YACZJ,UACEL,GAA2B,QAAhBA,EAAQU,IACf,qBACA,eAENjB,MAAOF,EACPoB,SAAUP,KAAKhB,mBACfwB,UAAWR,KAAKF,qBAGjBD,EAAY,qBAAKI,UAAU,WAAkB,KAE7CL,GAA2B,MAAhBA,EAAQU,IAClB,gCACE,sBAAKL,UAAU,mBAAf,UACE,sBAAKA,UAAU,WAAf,UACGL,EAAQa,KADX,KACmBb,EAAQc,IAAIC,WAG/B,qBAAKV,UAAU,OAAf,SACGW,WAASC,YAAYjB,EAAQkB,IAAIC,eAChCH,WAASI,gBAIf,sBAAKf,UAAU,kBAAf,UACE,sBAAKA,UAAU,OAAf,UAAuBgB,KAAKC,MAAMtB,EAAQM,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0BL,EAAQA,QAAQ,GAAGM,aAG/C,KAEHN,GAA2B,QAAhBA,EAAQU,IAClB,qBAAKL,UAAU,gBAAf,+GACE,Y,GA7FqBkB,aCJjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e6c63974.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { DateTime } from 'luxon';\n\nimport './App.css';\n\nconst API_URL = 'https://api.openweathermap.org/data/2.5/';\nconst API_KEY = '75787c308f283527b34dff6f9ed6f9b8';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchQuery: '',\n      weather: null,\n      isLoading: false,\n    };\n  }\n\n  handleSearchChange = (e) => {\n    this.setState({\n      searchQuery: e.target.value,\n    });\n  };\n\n  sendRequest = () => {\n    const { searchQuery } = this.state;\n\n    fetch(`${API_URL}weather?q=${searchQuery}&appid=${API_KEY}&units=metric`)\n      .then((response) => response.json())\n      .then((response) =>\n        this.setState({\n          weather: response,\n          isLoading: false,\n        })\n      );\n  };\n\n  handleSearchSubmit = (e) => {\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    this.setState(\n      {\n        isLoading: true,\n      },\n      this.sendRequest\n    );\n  };\n\n  componentDidMount() {}\n\n  render() {\n    const { searchQuery, weather, isLoading } = this.state;\n\n    return (\n      <div\n        className={\n          weather && weather.main && weather.main.temp < 0\n            ? 'container cold'\n            : 'container'\n        }\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          className={\n            weather && weather.cod === '404'\n              ? 'search-input error'\n              : 'search-input'\n          }\n          value={searchQuery}\n          onChange={this.handleSearchChange}\n          onKeyDown={this.handleSearchSubmit}\n        />\n\n        {isLoading ? <div className=\"loader\"></div> : null}\n\n        {weather && weather.cod === 200 ? (\n          <div>\n            <div className=\"location-wrapper\">\n              <div className=\"location\">\n                {weather.name}, {weather.sys.country}\n              </div>\n\n              <div className=\"date\">\n                {DateTime.fromSeconds(weather.dt).toLocaleString(\n                  DateTime.DATE_HUGE\n                )}\n              </div>\n            </div>\n            <div className=\"weather-wrapper\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}°C</div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n        ) : null}\n\n        {weather && weather.cod === '404' ? (\n          <div className=\"error-message\">Неправильный ввод</div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}